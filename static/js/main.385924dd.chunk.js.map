{"version":3,"sources":["aima/checkers.js","aima/minimax.js","aima/alphabeta.js","Components/Square.js","Components/Board.js","Components/Checker.js","Components/CheckersGroup.js","Components/Subtitles.js","messages.js","App.js","serviceWorker.js","index.js"],"names":["checkers","Game","initialState","p","q","player","opponent","state","actions","flatMap","y","x","royal","directions","direction","move","jump","filter","action","_","some","dist","result","recursiveResult","terminalTest","length","utility","heuristic","startPoint","onBoard","endPoint","occupied","endPointRoyal","prev","occupiedBy","crowned","direction2","_result","forward","sideward","steps","playerDirection","find","y2","x2","pos","posA","posB","eq","y1","x1","nextPlayer","stepResult","slice","intermediate","Math","abs","minimaxDecision","game","limit","map","outcome","minValue","reduce","current","next","maximinDecision","maxValue","max","Infinity","min","alphaBetaSearch","betaAlphaSearch","alpha","beta","v","Square","highlighted","showHighlight","this","props","ref","join","className","colour","onClick","parentCallback","React","Component","Board","key","highlightedSquares","validMove","Checker","style","top","left","CheckersGroup","pieces","selectedChecker","highlightedCheckers","Subtitles","message","undefined","pai","type","qai","WelcomeMessage","errorMessage","CongratulationMessage","config","pruning","limitLevels","dumb","smart","pauseTime","highlightsDefault","log","console","App","ai","highlights","displayQueue","setTimeout","regularActions","onDoubleClick","handleDoubleClick","moveResult","highlightResult","setState","aiMoves","pSearch","qSearch","floor","random","search","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.385924dd.chunk.js","sourcesContent":["import { Game } from 'aima'\n\nexport const checkers = new Game({\n  initialState: {\n    p: [\n      [0, 0, false], [0, 2, false], [0, 4, false], [0, 6, false],\n      [1, 1, false], [1, 3, false], [1, 5, false], [1, 7, false],\n      [2, 0, false], [2, 2, false], [2, 4, false], [2, 6, false]\n    ],\n    q: [\n      [5, 1, false], [5, 3, false], [5, 5, false], [5, 7, false],\n      [6, 0, false], [6, 2, false], [6, 4, false], [6, 6, false],\n      [7, 1, false], [7, 3, false], [7, 5, false], [7, 7, false]\n    ],\n    player: 'p',\n    opponent: 'q'\n  },\n  player: state => state.player,\n  actions: state => state[state.player].flatMap(([y, x, royal]) =>\n    directions(royal).flatMap(direction => [\n      ...move(state, [y, x, royal], direction),\n      ...jump(state, [y, x, royal], direction)\n    ]))\n    .filter((action, _, actions) =>\n      !actions.some(action => dist(action[0], action[1]) / 2 === 2) ||\n      dist(action[0], action[1]) / 2 === 2\n    ),\n  result: (state, action) => recursiveResult(state, action, true),\n  terminalTest: state =>\n    state.p.length === 0 ||\n    state.q.length === 0 ||\n    checkers.actions(state).length === 0,\n  utility: state => state.p.length - state.q.length,\n  heuristic: state => state.p.length - state.q.length\n})\n\nconst move = (state, startPoint, direction) =>\n  onBoard(endPoint(state, startPoint, direction)) &&\n    !occupied(state, endPoint(state, startPoint, direction))\n    ? [[startPoint, endPointRoyal(state, startPoint, direction)]]\n    : []\n\nconst jump = (state, [y, x, royal], direction, prev = []) =>\n  onBoard(endPoint(state, [y, x], direction, 2)) &&\n    !occupied(state, endPoint(state, [y, x], direction, 2)) &&\n    occupiedBy(state, endPoint(state, [y, x], direction), state.opponent)\n    ? [\n      [\n        ...prev,\n        [y, x, royal],\n        endPointRoyal(state, [y, x, royal], direction, 2)\n      ],\n      ...directions(crowned(state, [y, x, royal], direction, 2))\n        .flatMap(direction2 => jump(\n          prev.length === 1 ? state : checkers._result(state, prev),\n          endPointRoyal(state, [y, x, royal], direction, 2),\n          direction2,\n          [...prev, [y, x, royal]]\n        )\n        )\n    ]\n    : []\n\nconst endPoint = (state, [y, x, royal], [forward, sideward], steps = 1) => [\n  y + forward * playerDirection(state) * steps,\n  x + sideward * steps\n]\n\nconst crowned = (state, [y, x, royal], [forward, sideward], steps = 1) =>\n  royal ||\n  y + forward * playerDirection(state) * steps === 3.5 + 3.5 * playerDirection(state) ||\n  (steps === 2 && state[state.opponent].find(([y2, x2]) =>\n    y2 === y + forward * playerDirection(state) && x2 === x + sideward)[2])\n\nconst endPointRoyal = (state, [y, x, royal], [forward, sideward], steps = 1) => [\n  ...endPoint(state, [y, x, royal], [forward, sideward], steps),\n  crowned(state, [y, x, royal], [forward, sideward], steps)\n]\n\nconst onBoard = ([y, x]) => y >= 0 && y <= 7 && x >= 0 && x <= 7\n\nconst occupied = (state, pos) =>\n  ['p', 'q'].some(p => occupiedBy(state, pos, p))\n\nconst occupiedBy = (state, posA, player) =>\n  state[player].some(posB => eq(posA, posB))\n\nexport const playerDirection = state => state.player === 'p' ? +1 : -1\n\nexport const eq = ([y1, x1], [y2, x2]) => y1 === y2 && x1 === x2\n\nconst directions = royal => [[+1, -1], [+1, +1], ...royal ? [[-1, -1], [-1, +1]] : []]\n\nconst recursiveResult = (state, action, nextPlayer = false) =>\n  action.length >= 2\n    ? stepResult(\n      recursiveResult(state, action.slice(0, action.length - 1)),\n      action[action.length - 2],\n      action[action.length - 1],\n      nextPlayer\n    )\n    : state\n\nconst stepResult = (state, startPoint, endPoint, nextPlayer) => ({\n  [state.player]: [\n    ...state[state.player].filter(pos => !eq(pos, startPoint)),\n    endPoint\n  ],\n  [state.opponent]: state[state.opponent].filter(pos =>\n    dist(startPoint, endPoint) / 2 === 1 ||\n    !eq(pos, intermediate(startPoint, endPoint))\n  ),\n  player: nextPlayer ? state.opponent : state.player,\n  opponent: nextPlayer ? state.player : state.opponent\n})\n\nexport const dist = ([y1, x1], [y2, x2]) => Math.abs(y2 - y1) + Math.abs(x2 - x1)\n\nconst intermediate = ([y1, x1], [y2, x2]) => [(y1 + y2) / 2, (x1 + x2) / 2]\n","export const minimaxDecision = (game, state, limit) =>\n  game.actions(state)\n    .map(action => ({\n      action: action,\n      outcome: minValue(game, game.result(state, action), limit - 1)\n    }))\n    .reduce((current, next) => next.outcome > current.outcome ? next : current)\n\nexport const maximinDecision = (game, state, limit) =>\n  game.actions(state)\n    .map(action => ({\n      action: action,\n      outcome: maxValue(game, game.result(state, action), limit - 1)\n    }))\n    .reduce((current, next) => next.outcome < current.outcome ? next : current)\n\nconst maxValue = (game, state, limit) =>\n  game.terminalTest(state)\n    ? game.utility(state)\n    : limit < 1\n      ? game.heuristic(state)\n      : game.actions(state).reduce((prev, current) =>\n        Math.max(prev, minValue(game, game.result(state, current), limit - 1)), -Infinity)\n\nconst minValue = (game, state, limit) =>\n  game.terminalTest(state)\n    ? game.utility(state)\n    : limit < 1\n      ? game.heuristic(state)\n      : game.actions(state).reduce((prev, current) =>\n        Math.min(prev, maxValue(game, game.result(state, current), limit - 1)), Infinity)\n","// cf. https://github.com/aimacode/aima-pseudocode/blob/master/md/Alpha-Beta-Search.md\n\nexport const alphaBetaSearch = (game, state, limit) =>\n  game.actions(state)\n    .map(action => ({\n      action: action,\n      outcome: minValue(game, game.result(state, action), limit - 1, -Infinity, +Infinity)\n    }))\n    .reduce((current, next) => next.outcome > current.outcome ? next : current)\n\nexport const betaAlphaSearch = (game, state, limit) =>\n  game.actions(state)\n    .map(action => ({\n      action: action,\n      outcome: maxValue(game, game.result(state, action), limit - 1, -Infinity, +Infinity)\n    }))\n    .reduce((current, next) => next.outcome < current.outcome ? next : current)\n\nconst maxValue = (game, state, limit, alpha, beta) => {\n  if (game.terminalTest(state)) return game.utility(state)\n  if (limit < 1) return game.heuristic(state)\n  let v = -Infinity\n  for (const action of game.actions(state)) {\n    v = Math.max(v, minValue(game, game.result(state, action), limit, alpha, beta))\n    if (v >= beta) return v\n    alpha = Math.max(alpha, v)\n  }\n  return v\n}\n\nconst minValue = (game, state, limit, alpha, beta) => {\n  if (game.terminalTest(state)) return game.utility(state)\n  if (limit < 1) return game.heuristic(state)\n  let v = +Infinity\n  for (const action of game.actions(state)) {\n    v = Math.min(v, maxValue(game, game.result(state, action), limit, alpha, beta))\n    if (v <= alpha) return v\n    beta = Math.min(beta, v)\n  }\n  return v\n}\n","import React from 'react'\n\nexport default class Square extends React.Component {\n  colour (highlighted, showHighlight) {\n    return (this.props.y + this.props.x) % 2 === 1\n      ? 'light-tile'\n      : highlighted && showHighlight\n        ? 'dark-tile active'\n        : 'dark-tile'\n  }\n\n  render () {\n    return (\n      <div\n        ref={[this.props.y, this.props.x].join('-')}\n        className={this.colour(this.props.highlighted, this.props.showHighlight)}\n        onClick={() => this.props.parentCallback(this.props.highlighted)}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport Square from './Square'\n\nexport default class Board extends React.Component {\n  render () {\n    return (\n      <div className='board'>\n        {\n          [7, 6, 5, 4, 3, 2, 1, 0].map(y =>\n            <div className='row' key={y}>\n              {\n                [0, 1, 2, 3, 4, 5, 6, 7].map(x =>\n                  <Square\n                    highlighted={\n                      this.props.highlightedSquares.some(([y2, x2]) => y2 === y && x2 === x)\n                    }\n                    showHighlight={this.props.showHighlight}\n                    y={y}\n                    x={x}\n                    state={this.props.state}\n                    parentCallback={\n                      (validMove) => this.props.parentCallback(y, x, validMove)\n                    }\n                    key={x}\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n","import React from 'react'\n\nconst checkerStyle = (y, x) => ({\n  top: 'calc(50vh - 50vmin + 1.25vmin + ' + 12.5 * (7 - y) + 'vmin)',\n  left: 'calc(50vw - 50vmin + 1.25vmin + ' + 12.5 * x + 'vmin)'\n})\n\nexport default class Checker extends React.Component {\n  render () {\n    return (\n      <div\n        onClick={() => {\n          this.props.parentCallback()\n        }}\n        className={\n          (this.props.player === 'p' ? 'checker-dark' : 'checker-light') +\n          (this.props.highlighted ? ' highlighted' : '') +\n          (this.props.royal ? ' royal' : '')\n        }\n        style={checkerStyle(this.props.y, this.props.x)}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport Checker from './Checker'\nimport { eq } from '../aima/checkers'\n\nexport default class CheckersGroup extends React.Component {\n  render () {\n    return this.props.pieces.map(([y, x]) =>\n      <Checker\n        player={this.props.player}\n        selectedChecker={this.props.selectedChecker}\n        highlighted={this.props.highlightedCheckers.some(pos => eq(pos, [y, x]))}\n        parentCallback={() => this.props.parentCallback(y, x)}\n        y={y}\n        x={x}\n        royal={this.props.pieces.find(p => eq(p, [y, x]))[2]}\n        key={y + ',' + x}\n      />\n    )\n  }\n}\n","import React from 'react'\n\nexport default class Subtitles extends React.Component {\n  render () {\n    return (\n      <div className='subtitles'>\n        {this.props.message !== '' && (\n          <p>\n            {this.props.message}\n            <br />\n          </p>\n        )}\n        {this.props.pai === undefined && (\n          <WelcomeMessage p='p' parentCallback={type => this.props.parentCallback('p', type)} />\n        )}\n        {this.props.pai !== undefined && this.props.qai === undefined && (\n          <WelcomeMessage p='q' parentCallback={type => this.props.parentCallback('q', type)} />\n        )}\n      </div>\n    )\n  }\n}\n\nclass WelcomeMessage extends React.Component {\n  render () {\n    return (\n      <div className='ai-select'>\n        <div>\n          <p>\n            {this.props.p === 'p' ? 'Brown starts.' : 'Beige is next.'}\n          </p>\n        </div>\n        <div>\n          <span>\n            Read the rules.\n          </span>\n        </div>\n        <br />\n        <div>\n          <p>\n            Select an AI for the brown side:\n          </p>\n        </div>\n        <div>\n          <span onClick={() => this.props.parentCallback('random')}>\n            Random Moves AI\n          </span>\n        </div>\n        <div>\n          <span onClick={() => this.props.parentCallback('dumb')}>\n            Dumb AI\n          </span>\n        </div>\n        <div>\n          <span onClick={() => this.props.parentCallback('intermediate')}>\n            Intermediate AI\n          </span>\n        </div>\n        <div>\n          <span onClick={() => this.props.parentCallback('smart')}>\n            Smart AI\n          </span>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { checkers, eq, dist, playerDirection } from './aima/checkers'\n\nexport const errorMessage = (type, state, y, x, player) => {\n  let message = '' // clear prior subtitle messages\n  if (type === 'invalid move') {\n    if (state.selectedChecker.length !== 2) {\n      message = 'Please select the checker you want to move.'\n    } else if ((y + x) % 2 === 1) {\n      message = 'You can only move diagonally – that is, to another black square.'\n    } else if ((y - state.selectedChecker[0]) * playerDirection(state.state) <= 0) {\n      message = 'You can only move forward (unless you are royal).'\n    } else if (\n      checkers.actions(state.state).some(action =>\n        eq(action[0], state.selectedChecker) && dist(action[0], action[1]) / 2 === 2) &&\n      dist(state.selectedChecker, [y, x]) / 2 === 1\n    ) {\n      message = 'There is a jump available, so you need to jump.' // the modal fallacy\n    } else {\n      message = 'You can only move one step at a time (unless you jump over your opponent\\'s checker).'\n    }\n  } else if (type === 'invalid checker') {\n    if (state.state.player !== player) {\n      // error messages for checker selections of the wrong colour\n      if (state.selectedChecker.length === 2) {\n        // if this is an attempted move\n        message = 'You can only move to an empty square.'\n      } else {\n        // if this is an attempted checker selection\n        message = (state.state.player === 'p' ? ' Brown ' : ' Beige ') + ' is next.'\n      }\n    } else if (!checkers.actions(state.state).some(action => eq(action[0], [y, x]))) {\n      // error messages for invalid checker selections of the right colour\n      if (\n        checkers.actions(state.state).some(action =>\n          dist(action[0], action[1]) / 2 === 2) &&\n        !checkers.actions(state.state).some(action =>\n          eq(action[0], [y, x]) && dist(action[0], action[1]) / 2 === 2)\n      ) {\n        message = 'There is a jump available for one or more different checkers, so you need to perform one of these jumps.'\n      } else {\n        // TODO: checker is blocked\n        message = 'For some reason, you cannot move this checker.'\n      }\n    }\n  }\n  return message\n}\n\nexport class CongratulationMessage extends React.Component {\n  render () {\n    return (\n      <p>\n        {checkers.heuristic(this.props.state) > 0 ? 'Brown' : 'Beige'} wins.\n        Congratulations! <br />\n        Doubleclick to play again.\n      </p>\n    )\n  }\n}\n","import React from 'react'\nimport './App.css'\nimport { checkers, eq } from './aima/checkers'\nimport { minimaxDecision, maximinDecision } from './aima/minimax'\nimport { alphaBetaSearch, betaAlphaSearch } from './aima/alphabeta'\nimport Board from './Components/Board'\nimport CheckersGroup from './Components/CheckersGroup'\nimport Subtitles from './Components/Subtitles'\nimport { errorMessage, CongratulationMessage } from './messages'\n\nconst config = {\n  pruning: false,\n  limitLevels: {\n    dumb: 1,\n    intermediate: 2,\n    smart: 3\n  },\n  pauseTime: 2000 /* ms */,\n  highlightsDefault: true\n}\n\nconst log = (player, action) =>\n  console.log(\n    (player === 'p' ? 'brown: ' : 'beige: ') +\n    action.map(([y, x]) => y + ', ' + x).join(' -> '))\n\nclass App extends React.Component {\n  constructor () {\n    super()\n    // initialize game state and ui configuration\n    this.state = {\n      state: checkers.initialState, // game state (cf. `checkers.js`)\n      selectedChecker: [], // highlighted checker piece coordinates\n      ai: { // whether the players are played by an ai and if so which one\n        p: undefined,\n        q: undefined\n      },\n      message: '', // message to be displayed in subtitle style\n      highlights: config.highlightsDefault, // whether possible actions are highlighted\n      displayQueue: [] // contains action parts which still have to be displayed\n    }\n    // note that react state variables are accessed via `this.state` in general,\n    // so the game state is accessed via `this.state.state`\n\n    setTimeout(() => this.regularActions(), config.pauseTime)\n  }\n\n  render () {\n    return (\n      <div className='app' onDoubleClick={() => this.handleDoubleClick()}>\n        <Board\n          highlightedSquares={\n            checkers.actions(this.state.state)\n              .filter(action => eq(action[0], this.state.selectedChecker))\n              .map(action => action[action.length - 1])\n          }\n          showHighlight={this.state.highlights}\n          parentCallback={(y, x, validMove) => this.moveResult(y, x, validMove)}\n        />\n        {['p', 'q'].map(player =>\n          <CheckersGroup\n            key={player}\n            player={player}\n            pieces={this.state.state[player]}\n            selectedChecker={this.state.selectedChecker}\n            highlightedCheckers={\n              this.state.highlights && this.state.state.player === player\n                ? checkers.actions(this.state.state).map(action => action[0])\n                : []\n            }\n            parentCallback={(y, x) => this.highlightResult(y, x, player)}\n          />\n        )}\n        <Subtitles\n          message={this.state.message}\n          parentCallback={(player, type) => {\n            const ai = this.state.ai\n            ai[player] = type\n            this.setState({ ai: ai })\n          }}\n          pai={this.state.ai.p}\n          qai={this.state.ai.q}\n        />\n      </div>\n    )\n  }\n\n  handleDoubleClick () {\n    // TODO: display help\n    if (checkers.terminalTest(this.state.state)) {\n      // reset the game state and the ui\n      this.setState({\n        state: checkers.initialState,\n        selectedChecker: [],\n        ai: {\n          p: undefined,\n          q: undefined\n        }\n      })\n    }\n  }\n\n  moveResult (y, x, validMove) {\n    if (validMove) {\n      // when the user makes a manual move on one side, disable the ai for that side\n      const ai = this.state.ai\n      if (this.state.ai.p === undefined) ai.p = false\n      else if (this.state.ai.q === undefined) ai.q = false\n      this.setState({ ai: ai })\n\n      // perform move from highlighted checker to selected square\n      this.setState({\n        displayQueue: [\n          checkers.actions(this.state.state).filter(action =>\n            eq(action[0], this.state.selectedChecker) &&\n            eq(action[action.length - 1], [y, x])\n          )[0]\n        ]\n      })\n      /**\n       * TODO:\n       * when there are several paths to one square, let the user choose, somehow\n       * at the moment, the fist (arbitrary) move is chosen: `(...).filter(...)[0]`\n       */\n    } else this.setState({ message: errorMessage('invalid move', this.state, y, x) })\n  }\n\n  highlightResult (y, x, player) {\n    if (player === this.state.state.player) {\n      if (checkers.actions(this.state.state).some(action => eq(action[0], [y, x]))) {\n        this.setState({\n          selectedChecker: [y, x],\n          message: ''\n        })\n      }\n    }\n    this.setState({ message: errorMessage('invalid checker', this.state, y, x, player) })\n  }\n\n  regularActions () {\n    if (this.state.displayQueue.length > 0) {\n      const action = this.state.displayQueue[0]\n      if (action.length === 1) {\n        console.log('magovi')\n      } else if (action.length >= 2) {\n        console.log(this.state.state)\n        log(this.state.state.player, action)\n        this.setState({\n          state: {\n            ...checkers.result(this.state.state, action.slice(0, 2)),\n            player: action.length <= 2 && this.state.displayQueue.length <= 1\n              ? this.state.state.opponent\n              : this.state.player,\n            opponent: action.length <= 2 && this.state.displayQueue.length <= 1\n              ? this.state.state.player\n              : this.state.opponent\n          },\n          displayQueue: [\n            ...action.length > 2\n              ? [action.slice(1)]\n              : [],\n            ...this.state.displayQueue.slice(1)\n          ],\n          message: '',\n          selectedChecker: []\n        })\n      }\n    } else if (!checkers.terminalTest(this.state.state)) {\n      this.aiMoves()\n    } else {\n      this.setState({ message: <CongratulationMessage state='this.state.state' /> })\n    }\n    setTimeout(() => this.regularActions(), config.pauseTime)\n  }\n\n  aiMoves () {\n    const pSearch = config.pruning ? alphaBetaSearch : minimaxDecision\n    const qSearch = config.pruning ? betaAlphaSearch : maximinDecision\n    const search = player => player === 'p' ? pSearch : qSearch\n    const move = player => {\n      let action\n      if (this.state.ai[player] === 'random') {\n        // random move\n        const randAction = actions => actions[Math.floor(Math.random() * actions.length)]\n        action = randAction(checkers.actions(this.state.state))\n      } else {\n        // minimax move\n        action = search(player)(\n          checkers, this.state.state, config.limitLevels[this.state.ai[player]]\n        ).action\n      }\n      log(player, action)\n      this.setState({ displayQueue: [action] })\n    }\n    if (this.state.ai.p && this.state.state.player === 'p') {\n      move('p')\n    } else if (this.state.ai.q && this.state.state.player === 'q') {\n      move('q')\n    }\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}