{"version":3,"sources":["Components/Square.js","Components/Board.js","Components/Checker.js","Components/CheckersGroup.js","Components/HelpMessage.js","Components/ErrorMessage.js","Components/Subtitles.js","App.js","index.js"],"names":["Square","highlighted","showHighlight","this","props","y","x","ref","join","className","colour","onClick","parentCallback","React","Component","Board","map","key","highlightedSquares","some","y2","x2","highlights","state","validMove","Checker","top","left","player","royal","style","checkerStyle","CheckersGroup","pieces","selectedChecker","highlightedCheckers","pos","eq","find","p","HelpMessage","number","limits","dumb","intermediate","smart","window","open","1","2","3","4","5","6","ErrorMessage","type","message","length","playerDirection","checkers","actions","action","dist","error","Subtitles","help","welcomeCallback","pq","setState","ai","helpCallback","undefined","q","terminalTest","WelcomeMessage","CongratulationMessage","heuristic","config","pruning","pauseTime","App","initialState","oldState","displayQueue","filter","moveResult","highlightResult","arg","setTimeout","aiMoves","move","log","result","slice","opponent","search","alphaBetaSearch","minimaxDecision","betaAlphaSearch","maximinDecision","Math","floor","random","animationTime","console","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5780bed3.chunk.js","sourcesContent":["import React from 'react'\n\nexport default class Square extends React.Component {\n  colour (highlighted, showHighlight) {\n    return (this.props.y + this.props.x) % 2 === 1\n      ? 'light-tile'\n      : highlighted && showHighlight\n        ? 'dark-tile active'\n        : 'dark-tile'\n  }\n\n  render () {\n    return (\n      <div\n        ref={[this.props.y, this.props.x].join('-')}\n        className={this.colour(this.props.highlighted, this.props.showHighlight)}\n        onClick={() => this.props.parentCallback(this.props.highlighted)}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport Square from './Square'\n\nexport default class Board extends React.Component {\n  render () {\n    return (\n      <div className='board'>\n        {[7, 6, 5, 4, 3, 2, 1, 0].map(y =>\n          <div className='row' key={y}>\n            {[0, 1, 2, 3, 4, 5, 6, 7].map(x =>\n              <Square\n                highlighted={this.props.highlightedSquares\n                  .some(([y2, x2]) => y2 === y && x2 === x)}\n                showHighlight={this.props.highlights}\n                y={y}\n                x={x}\n                state={this.props.state}\n                parentCallback={validMove => this.props.parentCallback(y, x, validMove)}\n                key={x}\n              />\n            )}\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n","import React from 'react'\n\nexport default class Checker extends React.Component {\n  checkerStyle (y, x) {\n    return {\n      top: 'calc(50vh - 50vmin + 1.25vmin + ' + 12.5 * (7 - y) + 'vmin)',\n      left: 'calc(50vw - 50vmin + 1.25vmin + ' + 12.5 * x + 'vmin)'\n    }\n  }\n\n  render () {\n    return (\n      <div\n        onClick={() => this.props.parentCallback()}\n        className={\n          (this.props.player === 'p' ? 'checker-dark' : 'checker-light') +\n          (this.props.highlighted ? ' highlighted' : '') +\n          (this.props.royal ? ' royal' : '')\n        }\n        style={this.checkerStyle(this.props.y, this.props.x)}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport Checker from './Checker'\nimport { eq } from 'aima-checkers'\n\nexport default class CheckersGroup extends React.Component {\n  render () {\n    return this.props.pieces.map(([y, x]) => {\n      return (\n        <Checker\n          player={this.props.player}\n          selectedChecker={this.props.selectedChecker}\n          highlighted={this.props.highlightedCheckers.some(pos => eq(pos, [y, x]))}\n          parentCallback={() => this.props.parentCallback(y, x)}\n          y={y}\n          x={x}\n          royal={this.props.pieces.find(p => eq(p, [y, x]))[2]}\n          key={y + ',' + x}\n        />\n      )\n    }\n    )\n  }\n}\n","import React from 'react'\n\nexport default class HelpMessage extends React.Component {\n  render () {\n    return (\n      <div className='dialog help'>\n        <div className='bottomed'>\n          <div>\n            <span onClick={() => this.props.parentCallback('hide')}>\n              Hide help.\n            </span>\n          </div>\n          <div>\n            <p>\n              Highlights are {this.props.highlights ? 'enabled. ' : 'disabled. '}\n            </p>\n          </div>\n          <div>\n            <span onClick={() => this.props.parentCallback('highlights', !this.props.highlights)}>\n              {this.props.highlights ? 'Disable them. ' : 'Enable them. '}\n            </span>\n          </div>\n          <div>\n            <p>\n              You win the game if your opponent cannot do any moves and you have more pieces than them. In each round, you can move one of your checkers forward to a neighbouring empty black square. If this square is occupied by your opponent but the next square in this direction is free, then you can jump to the free square whilst your opponent will lose their checker. After a jump, you can perform another jump in the same round. If you reach the last row with a checker, it will be crowned and you can also move and jump backwards with it. When a checker jumps over a crowned checker, it will take over the crown. The same rules apply to both players. The player with the brown checkers starts.\n            </p>\n          </div>\n          <div>\n            <p>\n              You can choose an AI for each player. The Random Moves AI will perform random, valid moves. The other AIs presume are perfect and presume that you are perfect. The Dumb AI anticipates {number[this.props.limits.dumb]} rounds, the Intermediate AI {number[this.props.limits.intermediate]} rounds, and the Smart AI {number[this.props.limits.smart]} rounds.\n            </p>\n          </div>\n          <div>\n            <p>\n              This is an open-source game. You are very welcome to report bugs and to contribute.\n            </p>\n          </div>\n          <div>\n            <span onClick={() => window.open('https://github.com/davidpomerenke/checkers', '_blank')}>\n              Find it on GitHub.\n            </span>\n          </div>\n          <div>\n            <span onClick={() => this.props.parentCallback('hide')}>\n              Hide help.\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst number = { 1: 'one', 2: 'two', 3: 'three', 4: 'four', 5: 'five', 6: 'six' }\n","import React from 'react'\nimport { checkers, eq, dist, playerDirection } from 'aima-checkers'\n\nexport default class ErrorMessage extends React.Component {\n  message (type, state, y, x, player) {\n    let message\n    if (type === 'invalid move') {\n      // invalid click on a square\n      if (state.selectedChecker.length !== 2) {\n        message = 'Please select the checker you want to move.'\n      } else if ((y + x) % 2 === 1) {\n        message = 'You can only move diagonally – that is, to another black square.'\n      } else if ((y - state.selectedChecker[0]) * playerDirection(state.state) <= 0) {\n        message = 'You can only move forward (unless you are royal).'\n      } else if (\n        checkers.actions(state.state).some(action =>\n          eq(action[0], state.selectedChecker) && dist(action[0], action[1]) / 2 === 2) &&\n        dist(state.selectedChecker, [y, x]) / 2 === 1\n      ) {\n        message = 'There is a jump available, so you need to jump.' // the modal fallacy\n      } else {\n        message = 'You can only move one step at a time (unless you jump over your opponent\\'s checker).'\n      }\n    } else if (type === 'invalid checker') {\n      // invalid click on a checker\n      if (state.state.player !== player) {\n        // checker has the wrong colour\n        if (state.selectedChecker.length === 2) {\n          // another checker is already clicked, so this is probably an attempted move\n          message = 'You can only move to an empty square.'\n        } else {\n          // no other checker is clicked, so this is probably an attempted checker selection\n          message = (state.state.player === 'p' ? ' Brown ' : ' Beige ') + ' is next.'\n        }\n      } else if (!checkers.actions(state.state).some(action => eq(action[0], [y, x]))) {\n        // checker has the right colour\n        if (\n          checkers.actions(state.state).some(action =>\n            dist(action[0], action[1]) / 2 === 2) &&\n          !checkers.actions(state.state).some(action =>\n            eq(action[0], [y, x]) && dist(action[0], action[1]) / 2 === 2)\n        ) {\n          message = 'There is a jump available for one or more different checkers, so you need to perform one of these jumps.'\n        } else {\n          message = 'All moves of this checker are blocked.'\n        }\n      }\n    }\n    return message\n  }\n\n  render () {\n    const message = this.message(...this.props.error)\n    return message\n      ? (\n        <div>\n          <p>\n            {message}\n          </p>\n          <div>\n            <span onClick={() => this.props.parentCallback('help')}>\n              Read the rules.\n            </span>\n          </div>\n        </div>)\n      : ''\n  }\n}\n","import React from 'react'\nimport { checkers } from 'aima-checkers'\nimport HelpMessage from './HelpMessage'\nimport ErrorMessage from './ErrorMessage'\n\nexport default class Subtitles extends React.Component {\n  constructor () {\n    super()\n    this.state = { help: false }\n  }\n\n  render () {\n    const welcomeCallback = (pq, type) => type === 'help'\n      ? this.setState({ help: true })\n      : this.props.parentCallback({ ai: [pq, type] })\n    const helpCallback = action => action === 'hide'\n      ? this.setState({ help: false })\n      : this.props.parentCallback({ highlights: !this.props.highlights })\n\n    return (\n      <div className={'subtitles' + (!this.state.help ? ' marginal' : '')}>\n        {this.state.help && (\n          <HelpMessage\n            highlights={this.props.highlights}\n            limits={this.props.limits}\n            parentCallback={action => helpCallback(action)}\n          />)}\n        {this.props.error.length > 0 && !this.state.help && (\n          <ErrorMessage\n            error={this.props.error}\n            parentCallback={type => this.setState({ help: true })}\n          />)}\n        {this.props.ai.p === undefined && !this.state.help && (\n          <WelcomeMessage\n            p='p'\n            parentCallback={type => welcomeCallback('p', type)}\n            error={this.props.error}\n          />)}\n        {this.props.ai.p !== undefined && this.props.ai.q === undefined && !this.state.help && (\n          <WelcomeMessage\n            p='q'\n            parentCallback={type => welcomeCallback('q', type)}\n            error={this.props.error}\n          />)}\n        {checkers.terminalTest(this.props.state) && (\n          <CongratulationMessage state={this.props.state} />)}\n      </div>\n    )\n  }\n}\n\nclass WelcomeMessage extends React.Component {\n  render () {\n    return (\n      <div>\n        {this.props.error.length === 0 && (\n          <div>\n            <div>\n              <p>\n                {this.props.p === 'p' ? 'Brown starts.' : 'Beige is next.'}\n              </p>\n            </div>\n            <div>\n              <span onClick={() => this.props.parentCallback('help')}>\n                Read the rules.\n              </span>\n            </div>\n          </div>)}\n        <div>\n          <p>\n            Select an AI for the brown side:\n          </p>\n        </div>\n        <div>\n          <span onClick={() => this.props.parentCallback('random')}>\n            Random Moves AI\n          </span>\n        </div>\n        <div>\n          <span onClick={() => this.props.parentCallback('dumb')}>\n            Dumb AI\n          </span>\n        </div>\n        <div>\n          <span onClick={() => this.props.parentCallback('intermediate')}>\n            Intermediate AI\n          </span>\n        </div>\n        <div>\n          <span onClick={() => this.props.parentCallback('smart')}>\n            Smart AI\n          </span>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport class CongratulationMessage extends React.Component {\n  render () {\n    return (\n      <div>\n        <p>\n          {checkers.heuristic(this.props.state) > 0 ? 'Brown' : 'Beige'} wins.\n          Congratulations! <br />\n          Reload to play again.\n        </p>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport './App.css'\nimport { checkers, eq } from 'aima-checkers'\nimport { minimaxDecision, maximinDecision, alphaBetaSearch, betaAlphaSearch } from 'aima'\nimport Board from './Components/Board'\nimport CheckersGroup from './Components/CheckersGroup'\nimport Subtitles from './Components/Subtitles'\n\nconst config = {\n  pruning: false,\n  limits: {\n    dumb: 1,\n    intermediate: 2,\n    smart: 3\n  },\n  highlights: true,\n  pauseTime: 700 /* ms */\n}\n\nclass App extends React.Component {\n  constructor () {\n    super()\n    // initialize game state and ui configuration\n    this.state = {\n      state: checkers.initialState, // game state (cf. `checkers.js`)\n      oldState: checkers.initialState, // previous game state, for animations\n      selectedChecker: [], // coordinates of the selected checker piece\n      ai: { // whether the players are played by an ai and if so which one\n        p: undefined,\n        q: undefined\n      },\n      error: [], // user interaction errors to be shown as subtitles\n      highlights: config.highlights, // whether possible actions are highlighted\n      displayQueue: [] // contains action parts which still have to be displayed\n    }\n    // note that react state variables are accessed via `this.state` in general,\n    // so the game state is accessed via `this.state.state`\n  }\n\n  render () {\n    return (\n      <div className='app'>\n        <Board\n          highlightedSquares={\n            checkers.actions(this.state.state)\n              .filter(action => eq(action[0], this.state.selectedChecker))\n              .map(action => action[action.length - 1])\n          }\n          highlights={this.state.highlights}\n          parentCallback={(y, x, validMove) => this.moveResult(y, x, validMove)}\n        />\n        {['p', 'q'].map(player =>\n          <CheckersGroup\n            key={player}\n            player={player}\n            pieces={this.state.state[player]}\n            selectedChecker={this.state.selectedChecker}\n            highlightedCheckers={\n              this.state.highlights &&\n                this.state.state.player === player &&\n                !this.state.ai[this.state.state.player]\n                ? checkers.actions(this.state.state).map(action => action[0])\n                : []\n            }\n            parentCallback={(y, x) => this.highlightResult(y, x, player)}\n          />\n        )}\n        <Subtitles\n          parentCallback={arg => {\n            if ('highlights' in arg) {\n              this.setState({ highlights: arg.highlights })\n            } else if ('ai' in arg) {\n              this.setState({ ai: { ...this.state.ai, [arg.ai[0]]: arg.ai[1] } })\n              setTimeout(() => this.aiMoves(), 0)\n            }\n          }}\n          error={this.state.error}\n          ai={this.state.ai}\n          state={this.state.state}\n          highlights={this.state.highlights}\n          limits={config.limits}\n        />\n      </div>\n    )\n  }\n\n  moveResult (y, x, validMove) {\n    if (validMove) {\n      // when the user makes a manual move on one side, disable the ai for that side\n      const ai = this.state.ai\n      if (this.state.ai.p === undefined) ai.p = false\n      else if (this.state.ai.q === undefined) ai.q = false\n      this.setState({ ai: ai })\n\n      // perform move from highlighted checker to selected square\n      this.setState({\n        displayQueue: [\n          checkers.actions(this.state.state).filter(action =>\n            eq(action[0], this.state.selectedChecker) &&\n            eq(action[action.length - 1], [y, x])\n          )[0]\n        ]\n      })\n      setTimeout(() => this.move(), 0)\n    } else this.setState({ error: ['invalid move', this.state, y, x] })\n  }\n\n  highlightResult (y, x, player) {\n    if (\n      player === this.state.state.player &&\n      checkers.actions(this.state.state).some(action => eq(action[0], [y, x]))\n    ) {\n      this.setState({\n        selectedChecker: [y, x],\n        error: []\n      })\n    } else {\n      this.setState({ error: ['invalid checker', this.state, y, x, player] })\n    }\n  }\n\n  move () {\n    if (!checkers.terminalTest(this.state.state) && this.state.displayQueue.length > 0) {\n      const action = this.state.displayQueue[0]\n      if (this.state.displayQueue.length > 1 || action.length > 2) {\n        setTimeout(() => this.move(), config.pauseTime)\n      } else {\n        setTimeout(() => this.aiMoves(), config.pauseTime)\n      }\n      log(this.state.state.player, action)\n      this.setState({\n        state: {\n          ...checkers.result(this.state.state, action.slice(0, 2)),\n          player: action.length <= 2 && this.state.displayQueue.length <= 1\n            ? this.state.state.opponent\n            : this.state.state.player,\n          opponent: action.length <= 2 && this.state.displayQueue.length <= 1\n            ? this.state.state.player\n            : this.state.state.opponent\n        },\n        displayQueue: [\n          ...action.length > 2 ? [action.slice(1)] : [],\n          ...this.state.displayQueue.slice(1)\n        ],\n        error: [],\n        selectedChecker: []\n      })\n    }\n  }\n\n  aiMoves () {\n    const search = {\n      p: config.pruning ? alphaBetaSearch : minimaxDecision,\n      q: config.pruning ? betaAlphaSearch : maximinDecision\n    }\n    const randAction = actions => actions[Math.floor(Math.random() * actions.length)]\n    const move = player => {\n      this.setState({\n        displayQueue: [this.state.ai[player] === 'random'\n          // random move\n          ? randAction(checkers.actions(this.state.state))\n          // minimax / maximin move\n          : search[player](checkers, this.state.state, config.limits[this.state.ai[player]]).action]\n      })\n      setTimeout(() => this.move(), config.pauseTime + config.animationTime)\n    }\n    if (this.state.ai.p && this.state.state.player === 'p') {\n      move('p')\n    } else if (this.state.ai.q && this.state.state.player === 'q') {\n      move('q')\n    }\n  }\n}\n\nconst log = (player, action) =>\n  console.log(\n    (player === 'p' ? 'brown: ' : 'beige: ') +\n    action.map(([y, x]) => y + ', ' + x).join(' -> '))\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}